#!/usr/bin/env python3

import sys
import venv
from pathlib import Path
import subprocess

if len(sys.argv) != 3:
    raise ValueError("Incorrect number of arguments, expected 2")
if sys.version_info < (3, 10):
    raise RuntimeError("Insufficient Python version!")
try:
    import ctypes
    import zlib
    import bz2
    import lzma
except ImportError:
    raise

pyproject = Path(sys.argv[1]).resolve(strict=True)
targetdir = Path(sys.argv[2]).resolve()

# Construct the base virtual environment
venv.EnvBuilder(system_site_packages=True, clear=True, with_pip=True, upgrade_deps=True).create(targetdir)
pip = targetdir / "bin" / "pip"

# Install the bits in the virtual environment using Pip, in full isolation
subprocess.run([pip,
    "--no-input",  # Don't prompt for input
    "--no-cache-dir", # Don't use the cache
    "--disable-pip-version-check",  # Don't check the PyPI for newer versions of Pip itself
    "--require-virtualenv", # Ensure we're running in the virtual environment
    "install",
    "--no-build-isolation", # Don't clear variables like PYTHONPATH
    "--no-warn-script-location", # Don't warn about bin/ not being on the PATH
    "--no-index", # Don't query the PyPI for anything
    "--editable", # Ensure updates to the source propagate to the installation
    pyproject.parent], check=True)
