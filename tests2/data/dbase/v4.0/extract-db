#!/usr/bin/env python3

import shutil
import tarfile
import tempfile
import typing
from pathlib import Path

import click


@click.command()
@click.argument("tarball", type=click.File("rb"))
@click.argument("target", type=click.Path(file_okay=False, writable=True, path_type=Path))
def extract_db(tarball: typing.BinaryIO, target: Path):
    """Extract the TARBALL generated by prof and extract it to the TARGET directory."""
    if target.exists():
        shutil.rmtree(target)

    with tempfile.TemporaryDirectory(
        dir=target.parent, prefix=f".{target.name}.tmp.", ignore_cleanup_errors=True
    ) as tmpdir_s:
        tmpdir = Path(tmpdir_s)
        with tarfile.open(fileobj=tarball, mode="r:*") as tarf:
            tarf.extractall(tmpdir)

        for file in ("meta.db", "profile.db", "cct.db"):
            if not (tmpdir / file).exists():
                raise ValueError(f"No {file} found in tarball!")

        tmpdir.replace(target)


if __name__ == "__main__":
    extract_db()  # pylint: disable=no-value-for-parameter
