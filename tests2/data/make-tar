#!/usr/bin/env python3

import collections.abc
import tarfile
import typing
from pathlib import Path, PurePosixPath

import click


def tarfilter(tarinfo: tarfile.TarInfo) -> tarfile.TarInfo:
    tarinfo.uid = tarinfo.gid = 0
    tarinfo.uname = tarinfo.gname = "root"
    return tarinfo


@click.command()
@click.argument("output", type=click.File("wb"))
@click.option(
    "--add",
    "sources",
    type=(click.Path(exists=True, dir_okay=False), PurePosixPath),
    metavar="<FILE DSTPATH>",
    multiple=True,
    help="Add a FILE to the tarball at the DSTPATH",
)
def make_tar(
    output: typing.BinaryIO, sources: collections.abc.Iterable[tuple[Path, PurePosixPath]]
):
    """Create an OUTPUT lzma-compressed tarball."""
    with tarfile.open(fileobj=output, mode="w:xz") as tar:
        for src, dst in sources:
            tar.add(src, arcname=dst, recursive=False, filter=tarfilter)


if __name__ == "__main__":
    make_tar()  # pylint: disable=no-value-for-parameter
