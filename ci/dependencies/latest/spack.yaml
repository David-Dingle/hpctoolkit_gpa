spack:
  concretizer:
    unify: true

  definitions:
  - target_specific: []
  - when: arch.satisfies('target=x86_64:')
    target_specific:
    - 'intel-xed +pic @2022.04.17:'

  specs:
  # Build-time packages
  - autoconf @2.69
  - automake @1.15.1
  - libtool @2.4.6
  - m4
  - 'gmake @4.3:'

  # Libmonitor
  - libmonitor @2021.11.08 +hpctoolkit ~dlopen

  # Remaining dependencies
  # TODO: Reduce this to include only what WE directly depend on.
  - 'papi @6.0.0.1:'
  - 'libpfm4 @4.11.0:'

  - 'boost @1.79.0:
     +atomic +date_time +filesystem +system +thread +timer +graph +regex
     +shared +multithreaded
     ~debug ~mpi ~python ~iostreams ~numpy
     visibility=global'

  - 'libiberty @2.37:'
  - 'elfutils +bzip2 +xz ~nls @0.186:'
  - 'dyninst +openmp @12.1.0:'
  - intel-tbb +shared +tm @2020.3

  - 'bzip2 @1.0.8:'
  - 'xz +pic @5.2.5:'
  - 'zlib +optimize +shared @1.2.12:'

  - 'libunwind +xz +pic @1.6.2:'
  - 'xerces-c transcoder=iconv @3.2.3:'
  - memkind

  - 'opencl-c-headers @2022.01.04:'

  - 'yaml-cpp @0.7.0:'

  # MPI
  - openmpi

  # Special dependencies for the tests2 suite
  - 'python @3.10:'
  - 'meson @0.62.2:'
  - 'py-pytest @7.1.3:'
  - 'py-ruamel-yaml @0.17.16:'

  - $target_specific

  view:
    default:
      root: view
      link: run

    unified:
      root: view-unified
      link: roots
      exclude:
      - autoconf
      - automake
      - gmake
      - libpfm4
      - libtool
      - m4
      - papi

    papi:
      root: view-papi
      link: roots
      select:
      - papi

    perfmon:
      root: view-perfmon
      link: roots
      select:
      - libpfm4

  # Reuse packages from the public buildcache whenever possible
  mirrors:
    nowhere: /does/not/exist
    # XXX: Temporarily disabled to reduce noise
    # base: 's3://spack-binaries/develop/hpctoolkit'
    # develop: 's3://spack-binaries/develop'

  gitlab-ci:
    pipeline-attributes:
      workflow:
        rules:
        - when: always

    build-job-attributes:
      tags: [docker]  # Other tags are added by mappings
      cache:
      - key: spack
        paths: [.spack.git]
        when: always
      - key: depsjob-$CI_JOB_IMAGE
        paths: [.spack-bincache/]
        when: always

      before_script: &spack_init
      - export SPACK_ROOT="$(realpath .spack)"
      - ci/dependencies/spack-init.sh
      - source "$SPACK_ROOT"/share/spack/setup-env.sh
      - ci/dependencies/spack-bc-downstream.sh
      script:
      - spack config --scope site add "config:binary_cache_root:$CI_PROJECT_DIR/.spack-bincache/"
      - spack config --scope site add config:install_tree:padded_length:100
      - spack env activate --without-view "$SPACK_CONCRETE_ENV_DIR"
      - &postjob
        - ci/scripts/network-stats.sh .netstats.txt
      - spack -d ci rebuild
      - *postjob

    reindex-job-attributes:
      tags: [docker]
      image: registry.gitlab.com/hpctoolkit/ci-images/ubuntu20.04:latest
      resource_group: bcindex-$CI_COMMIT_REF_SLUG
      before_script: *spack_init

    noop-job-attributes:
      tags: [noop-job]

    mappings:
    - match: ['os=centos7']
      runner-attributes:
        image: registry.gitlab.com/hpctoolkit/ci-images/centos7:latest
    - match: ['os=fedora36']
      runner-attributes:
        image: registry.gitlab.com/hpctoolkit/ci-images/fedora36:latest
    - match: ['os=opensuse_leap15']
      runner-attributes:
        image: registry.gitlab.com/hpctoolkit/ci-images/leap15:latest
    - match: ['os=almalinux8']
      runner-attributes:
        image: registry.gitlab.com/hpctoolkit/ci-images/almalinux8:latest
    - match: ['os=ubuntu20.04']
      runner-attributes:
        image: registry.gitlab.com/hpctoolkit/ci-images/ubuntu20.04:latest

    - match: ['target=:x86_64_v3']
      runner-attributes:
        tags: [linux/amd64]
    - match: ['target=:graviton']
      runner-attributes:
        tags: [linux/arm64]
