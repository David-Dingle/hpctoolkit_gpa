spack:
  concretizer:
    unify: true

  definitions:
  - target_specific: []
  - when: arch.satisfies('target=x86_64:')
    target_specific:
    - intel-xed +pic @2022.04.17

  specs:
  # Build-time packages
  - autoconf @2.69
  - automake @1.15.1
  - libtool @2.4.6
  - m4
  - 'gmake @4.3:'

  # Libmonitor
  - libmonitor @2021.11.08 +hpctoolkit ~dlopen

  # Remaining dependencies
  # TODO: Reduce this to include only what WE directly depend on.
  - papi @6.0.0.1
  - libpfm4 @4.11.0

  - boost @1.77.0
    +atomic +date_time +filesystem +system +thread +timer +graph +regex
    +shared +multithreaded
    ~debug ~mpi ~python ~iostreams ~numpy
    visibility=global

  - libiberty @2.37
  - elfutils +bzip2 +xz ~nls @0.186
  - dyninst +openmp @12.2.0
  - intel-tbb +shared +tm @2020.3

  - bzip2 @1.0.8
  - xz +pic @5.2.5
  - zlib +optimize +shared @1.2.13

  - libunwind +xz +pic @1.6.2
  - xerces-c transcoder=iconv @3.2.3
  - memkind

  - opencl-c-headers @2022.01.04

  - yaml-cpp @0.7.0

  # MPI
  - openmpi

  # Special dependencies for the tests2 suite
  - python @3.10
  - meson @0.64.0
  - py-pytest @7.1.3
  - py-ruamel-yaml @0.17.16
  - py-click @8.1.3
  - py-pyparsing @3.0.6

  - $target_specific

  view:
    default:
      root: view
      link: run

    unified:
      root: view-unified
      link: roots
      exclude:
      - autoconf
      - automake
      - gmake
      - libpfm4
      - libtool
      - m4
      - papi

    papi:
      root: view-papi
      link: roots
      select:
      - papi

    perfmon:
      root: view-perfmon
      link: roots
      select:
      - libpfm4

  # Reuse packages from the public buildcache whenever possible
  mirrors:
    develop: 's3://spack-binaries/develop'

  gitlab-ci:
    pipeline-attributes:
      workflow:
        rules:
        - when: always

    build-job-attributes:
      tags: [docker, linux/$ARCH]
      cache:
      - key: spack
        paths: [.spack.git]
        when: always
      - key: depsjob-$CI_JOB_IMAGE
        paths: [.spack-bincache-shared/]
        when: always
      - key: depsjob-$CI_JOB_IMAGE-$CI_COMMIT_REF_SLUG
        paths: [.spack-bincache-nonprotected/]
        when: always

      before_script: &spack_init
      - export SPACK_ROOT="$(realpath .spack)"
      - ci/dependencies/spack-init.sh
      - source "$SPACK_ROOT"/share/spack/setup-env.sh
      - spack config --scope site add -f "$SBCACHE_YAML"
      script:
      - |
        cat > .spack-config.yml <<EOF
        config:
          install_tree:
            padded_length: 100
          local_binary_cache:
          - root: '${CI_PROJECT_DIR}/.spack-bincache-shared/'
        EOF
      - spack config --scope site add -f .spack-config.yml
      - rm .spack-config.yml
      - spack env activate --without-view "$SPACK_CONCRETE_ENV_DIR"
      - &postjob
        - ci/scripts/network-stats.sh .netstats.txt
      - spack -d ci rebuild
      - *postjob

    reindex-job-attributes:
      tags: [docker]
      image: registry.gitlab.com/hpctoolkit/ci-images/ubuntu20.04:latest
      resource_group: bcindex-$CI_COMMIT_REF_SLUG
      before_script: *spack_init

    noop-job-attributes:
      tags: [noop-job]

    match_behavior: merge
    mappings:
    - match: ['os=fedora36']
      job-attributes:
        image: registry.gitlab.com/hpctoolkit/ci-images/fedora36:$ARCH
    - match: ['os=opensuse_leap15']
      job-attributes:
        image: registry.gitlab.com/hpctoolkit/ci-images/leap15:$ARCH
    - match: ['os=almalinux8']
      job-attributes:
        image: registry.gitlab.com/hpctoolkit/ci-images/almalinux8:$ARCH
    - match: ['os=ubuntu20.04']
      job-attributes:
        image: registry.gitlab.com/hpctoolkit/ci-images/ubuntu20.04:$ARCH

    - match: ['target=:x86_64_v3']
      job-attributes:
        +variables:
          ARCH: amd64
    - match: ['target=:cortex_a72']
      job-attributes:
        +variables:
          ARCH: arm64
