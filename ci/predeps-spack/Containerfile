ARG SPACKOS
ARG TARGETOS
ARG TARGETARCH
FROM ghcr.io/spack/$SPACKOS:latest as build

# Copy in the environments, and possibly modify them depending on the mode
COPY spack.yaml /opt/environment/spack.yaml
ARG VERMODE=latest
RUN \
  case "$VERMODE" in \
  latest) \
    sed -E -i '/LATEST: @/ s/@[a-zA-Z0-9._-]+[,:a-zA-Z0-9._-]*(.*)LATEST: @([a-zA-Z0-9._-]+[,:a-zA-Z0-9._-]*)/@\2\1/' /opt/environment/spack.yaml; \
    ;; \
  minimum) \
    sed -E -i 's/@([a-zA-Z0-9._-]+)[,:a-zA-Z0-9._-]*/@\1/g' /opt/environment/spack.yaml; \
    ;; \
  *) \
    echo "Bad VERMODE: $VERMODE" >&2; \
    exit 1; \
    ;; \
  esac

# Install all the packages we want, using the environments
RUN --mount=type=secret,id=spack_mirrors,target=/root/.spack/mirrors.yaml \
    --mount=type=cache,target=/mnt/cache/spack-bin,sharing=locked \
  export PATH=/opt/spack/bin:"$PATH" \
  && spack -D /opt/environment install --no-check-signature \
  && spack -D /opt/environment buildcache push --unsigned --allow-root --fail-fast --update-index local-cache \
  && spack -D /opt/environment gc -y

# Generate a Meson native file that provides access to the installed packages, using Jinja2
COPY j2-spack.py spack_env.ini.j2 /tmp/
RUN \
  export PATH=/opt/spack/bin:"$PATH" \
  && py="$(spack -D /opt/environment find --format='{prefix}' python)/bin/python" \
  && "$py" -m venv /tmp/venv && /tmp/venv/bin/python -m pip install 'Jinja2>=3.1,<4' \
  && /tmp/venv/bin/python /tmp/j2-spack.py /tmp/spack_env.ini.j2 /usr/share/meson/native/spack_env.ini \
  && rm -r /tmp/j2-spack.py /tmp/spack_env.ini.j2 /tmp/venv

# Copy the bare minimum pieces into the final image
FROM scratch
COPY --from=build /opt/software /opt/software
COPY --from=build /opt/environment /opt/environment
COPY --from=build /usr/share/meson/native/spack_env.ini /usr/share/meson/native/spack_env.ini
