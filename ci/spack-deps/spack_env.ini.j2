{%- macro pfxpath(spec, suffix = "") -%}
  {%- if spack_prefix(spec) -%}
    {{ spack_prefix(spec) + "/" + suffix }}
  {%- endif -%}
{%- endmacro -%}

[constants]
{%- macro rpath(spec) -%}
  {%- if spack_prefix(spec) -%}
    {%- for libdir in ["lib64", "lib"] %}'-Wl,-rpath={{ pfxpath(spec, libdir) }}', {% endfor -%}
  {%- endif -%}
{%- endmacro %}
{%- macro ldir(spec) -%}
  {%- if spack_prefix(spec) -%}
    {%- for libdir in ["lib64", "lib"] %}'-L{{ pfxpath(spec, libdir) }}', {% endfor -%}
  {%- endif -%}
{%- endmacro %}
{%- macro idir(spec) -%}
  {%- if spack_prefix(spec) -%}
    '-I{{ pfxpath(spec, "include") }}',
  {%- endif -%}
{%- endmacro %}
_cc_args = [
    {{ idir("opencl-c-headers") }}
  ]
_link_args = [
    {{ rpath("boost") }}
    {{ rpath("bzip2") }}
    {{ rpath("elfutils") }}
    {{ rpath("intel-tbb") }}
    {{ rpath("libmonitor") }}
    {{ rpath("libunwind") }}
    {{ rpath("xerces-c") }}
    {{ rpath("xz") }}
    {{ rpath("zlib") }}
    {{ rpath("libiberty") }}
    {{ rpath("yaml-cpp") }}
    {{ rpath("papi") }}
    {{ rpath("libpfm4") }}
    {{ rpath("zstd") }}
  ]

[built-in options]
c_args = _cc_args
cpp_args = _cc_args
c_link_args = _link_args
cpp_link_args = _link_args

cmake_prefix_path = [
  {%- for spec in spack_all_specs() -%}
    '{{ pfxpath(spec) }}',
  {%- endfor -%}
  ]
pkg_config_path = [
  {%- for spec in spack_all_specs() -%}
    '{{ pfxpath(spec, "lib/pkgconfig") }}',
  {%- endfor -%}
  ]

[properties]
boost_root = '{{ pfxpath("boost") }}'

lint_depends_ignore = [
  {% if spack_prefix("opencl-c-headers") -%}
    '{{ pfxpath("opencl-c-headers") }}',  # Injected via -I flags in *_args
  {%- endif %}
  ]
lint_depends_dep_provides = [
  ['boost', '{{ pfxpath("boost") }}'],
  {% if spack_prefix("elfutils") -%}
    ['libdw', '{{ pfxpath("elfutils")}}'],
    ['libelf', '{{ pfxpath("elfutils")}}'],
  {%- endif %}
  {% if spack_prefix("libiberty") -%}
    ['Libiberty', '{{ pfxpath("libiberty") }}'],
  {%- endif %}
  ['liblzma', '{{ pfxpath("xz") }}'],
  ['Libmonitor', '{{ pfxpath("libmonitor")}}'],
  ['libunwind', '{{ pfxpath("libunwind")}}'],
  {% if spack_prefix("papi") -%}
    ['papi', '{{ pfxpath("papi")}}'],
  {%- endif %}
  {% if spack_prefix("libpfm4") -%}
    ['Perfmon2', '{{ pfxpath("libpfm4")}}'],
  {%- endif %}
  {% if spack_prefix("intel-tbb") -%}
    ['TBB', '{{ pfxpath("intel-tbb") }}'],
  {%- endif %}
  {% if spack_prefix("xerces-c") -%}
    ['xerces-c', '{{ pfxpath("xerces-c") }}'],
  {%- endif %}
  {% if spack_prefix("xxhash") -%}
    ['libxxhash', '{{ pfxpath("xxhash") }}'],
  {%- endif %}
  {% if spack_prefix("yaml-cpp") -%}
    ['yaml-cpp', '{{ pfxpath("yaml-cpp") }}'],
  {%- endif %}
  ]
