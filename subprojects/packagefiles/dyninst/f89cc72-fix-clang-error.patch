From 42c3a4b497071e421686ded49ad0da406c8053ac Mon Sep 17 00:00:00 2001
From: wuxx1279 <bbiiggppiigg@gmail.com>
Date: Mon, 27 Feb 2023 14:06:40 -0600
Subject: [PATCH 1/2] Fix virtual derived signature to match base class

makeRegisterExpression in the derived class had
an incorrect function signature, which made
compilation fails on gcc-6 and clang.
---
 .../src/AMDGPU/cdna2/InstructionDecoder-amdgpu-cdna2.C         | 2 +-
 .../src/AMDGPU/cdna2/InstructionDecoder-amdgpu-cdna2.h         | 3 +--
 .../src/AMDGPU/gfx908/InstructionDecoder-amdgpu-gfx908.C       | 2 +-
 .../src/AMDGPU/gfx908/InstructionDecoder-amdgpu-gfx908.h       | 3 +--
 4 files changed, 4 insertions(+), 6 deletions(-)

diff --git a/instructionAPI/src/AMDGPU/cdna2/InstructionDecoder-amdgpu-cdna2.C b/instructionAPI/src/AMDGPU/cdna2/InstructionDecoder-amdgpu-cdna2.C
index daf7a4b7d0b372e75e1ab0d6193c8cff0d387ffa..5542901e693a51e737b4189380fd03aff9758e3d 100644
--- a/instructionAPI/src/AMDGPU/cdna2/InstructionDecoder-amdgpu-cdna2.C
+++ b/instructionAPI/src/AMDGPU/cdna2/InstructionDecoder-amdgpu-cdna2.C
@@ -162,7 +162,7 @@ namespace Dyninst {
         Expression::Ptr InstructionDecoder_amdgpu_cdna2::decodeOPR_WAITCNT(uint64_t input){
 		    return Immediate::makeImmediate(Result(s16, input));
         }
-        Expression::Ptr InstructionDecoder_amdgpu_cdna2::makeRegisterExpression(MachRegister registerID){
+        Expression::Ptr InstructionDecoder_amdgpu_cdna2::makeRegisterExpression(MachRegister registerID, uint32_t ){
             if(registerID == amdgpu_cdna2::src_literal){
                 return Immediate::makeImmediate(Result(u32,decodeOPR_LITERAL()));
             }
diff --git a/instructionAPI/src/AMDGPU/cdna2/InstructionDecoder-amdgpu-cdna2.h b/instructionAPI/src/AMDGPU/cdna2/InstructionDecoder-amdgpu-cdna2.h
index d35482ffad9c8561a8823ff97d67829beb794b50..67dd7f2763347016349e4d1f8d458a1770d09648 100644
--- a/instructionAPI/src/AMDGPU/cdna2/InstructionDecoder-amdgpu-cdna2.h
+++ b/instructionAPI/src/AMDGPU/cdna2/InstructionDecoder-amdgpu-cdna2.h
@@ -305,8 +305,7 @@ namespace Dyninst {
             Expression::Ptr decodeOPR_SIMM16(uint64_t input);
             Expression::Ptr decodeOPR_SIMM32(uint64_t input);
             Expression::Ptr decodeOPR_WAITCNT(uint64_t input);
-            using InstructionDecoderImpl::makeRegisterExpression;
-            Expression::Ptr makeRegisterExpression(MachRegister registerID);
+            Expression::Ptr makeRegisterExpression(MachRegister registerID, uint32_t num_elements = 1);
             Expression::Ptr makeRegisterExpression(MachRegister registerID, uint32_t low , uint32_t high );
             void specialHandle();
             #include "amdgpu_cdna2_decoder_impl.h"    
diff --git a/instructionAPI/src/AMDGPU/gfx908/InstructionDecoder-amdgpu-gfx908.C b/instructionAPI/src/AMDGPU/gfx908/InstructionDecoder-amdgpu-gfx908.C
index 70d9edc6f9c11a37db4dbd0abcc41cdab1777ce7..c31b75a83e013f54dc149a0a267a02640e5183b7 100644
--- a/instructionAPI/src/AMDGPU/gfx908/InstructionDecoder-amdgpu-gfx908.C
+++ b/instructionAPI/src/AMDGPU/gfx908/InstructionDecoder-amdgpu-gfx908.C
@@ -178,7 +178,7 @@ namespace Dyninst {
         Expression::Ptr InstructionDecoder_amdgpu_gfx908::decodeOPR_WAITCNT(uint64_t input){
 		    return Immediate::makeImmediate(Result(s16, input));
         }
-        Expression::Ptr InstructionDecoder_amdgpu_gfx908::makeRegisterExpression(MachRegister registerID){
+        Expression::Ptr InstructionDecoder_amdgpu_gfx908::makeRegisterExpression(MachRegister registerID, uint32_t ){
             if(registerID == amdgpu_gfx908::src_literal){
                 return Immediate::makeImmediate(Result(u32,decodeOPR_LITERAL()));
             }
diff --git a/instructionAPI/src/AMDGPU/gfx908/InstructionDecoder-amdgpu-gfx908.h b/instructionAPI/src/AMDGPU/gfx908/InstructionDecoder-amdgpu-gfx908.h
index 7826af0d241a36276fa71497b377b2644cf17fec..d73f438c60ef195fddf1791f70f49791432993b5 100644
--- a/instructionAPI/src/AMDGPU/gfx908/InstructionDecoder-amdgpu-gfx908.h
+++ b/instructionAPI/src/AMDGPU/gfx908/InstructionDecoder-amdgpu-gfx908.h
@@ -298,8 +298,7 @@ namespace Dyninst {
             Expression::Ptr decodeOPR_SIMM16(uint64_t input);
             Expression::Ptr decodeOPR_SIMM32(uint64_t input);
             Expression::Ptr decodeOPR_WAITCNT(uint64_t input);
-            using InstructionDecoderImpl::makeRegisterExpression;
-            Expression::Ptr makeRegisterExpression(MachRegister registerID);
+            Expression::Ptr makeRegisterExpression(MachRegister registerID, uint32_t num_elements = 1);
             Expression::Ptr makeRegisterExpression(MachRegister registerID, uint32_t low , uint32_t high );
             void specialHandle();
             #include "amdgpu_gfx908_decoder_impl.h"    

From 557a01949a4c11e8e8975fe113e4ab07b64bf25d Mon Sep 17 00:00:00 2001
From: "James A. Kupsch" <kupsch@cs.wisc.edu>
Date: Mon, 27 Feb 2023 15:25:44 -0600
Subject: [PATCH 2/2] add InstructionDecoderImpl::makeRegisterExpression to
 derived classes

Eliminate virtual-overloaded warning as there are 3 overloaded methods of
InstructionDecoderImpl::makeRegisterExpression, but only 2 are defined in
these classes for add a using so the 3rd is not hidden.
---
 .../src/AMDGPU/cdna2/InstructionDecoder-amdgpu-cdna2.h           | 1 +
 .../src/AMDGPU/gfx908/InstructionDecoder-amdgpu-gfx908.h         | 1 +
 2 files changed, 2 insertions(+)

diff --git a/instructionAPI/src/AMDGPU/cdna2/InstructionDecoder-amdgpu-cdna2.h b/instructionAPI/src/AMDGPU/cdna2/InstructionDecoder-amdgpu-cdna2.h
index 67dd7f2763347016349e4d1f8d458a1770d09648..f194ac4327fd0e152c0afa67054fb37f40f543ed 100644
--- a/instructionAPI/src/AMDGPU/cdna2/InstructionDecoder-amdgpu-cdna2.h
+++ b/instructionAPI/src/AMDGPU/cdna2/InstructionDecoder-amdgpu-cdna2.h
@@ -305,6 +305,7 @@ namespace Dyninst {
             Expression::Ptr decodeOPR_SIMM16(uint64_t input);
             Expression::Ptr decodeOPR_SIMM32(uint64_t input);
             Expression::Ptr decodeOPR_WAITCNT(uint64_t input);
+            using InstructionDecoderImpl::makeRegisterExpression;
             Expression::Ptr makeRegisterExpression(MachRegister registerID, uint32_t num_elements = 1);
             Expression::Ptr makeRegisterExpression(MachRegister registerID, uint32_t low , uint32_t high );
             void specialHandle();
diff --git a/instructionAPI/src/AMDGPU/gfx908/InstructionDecoder-amdgpu-gfx908.h b/instructionAPI/src/AMDGPU/gfx908/InstructionDecoder-amdgpu-gfx908.h
index d73f438c60ef195fddf1791f70f49791432993b5..b5420d8fcbb06843f6f09fab0604d325ddb88eac 100644
--- a/instructionAPI/src/AMDGPU/gfx908/InstructionDecoder-amdgpu-gfx908.h
+++ b/instructionAPI/src/AMDGPU/gfx908/InstructionDecoder-amdgpu-gfx908.h
@@ -298,6 +298,7 @@ namespace Dyninst {
             Expression::Ptr decodeOPR_SIMM16(uint64_t input);
             Expression::Ptr decodeOPR_SIMM32(uint64_t input);
             Expression::Ptr decodeOPR_WAITCNT(uint64_t input);
+            using InstructionDecoderImpl::makeRegisterExpression;
             Expression::Ptr makeRegisterExpression(MachRegister registerID, uint32_t num_elements = 1);
             Expression::Ptr makeRegisterExpression(MachRegister registerID, uint32_t low , uint32_t high );
             void specialHandle();
