default_language_version:
  python: python3

# NB: The hooks in this file are listed in a particular order to reduce the number of times
# pre-commit has to run before getting an all-clear.

repos:
# ------------------------------------------------------------------------------------
#  Automation hooks:  Hooks that can alter the semantics of files
# ------------------------------------------------------------------------------------

- repo: https://github.com/asottile/pyupgrade
  rev: v3.0.0
  hooks:
  # Automatically elide older Python syntax and replace with newer ones
  - id: pyupgrade
    args: [--py310-plus]
    # These files are excluded from all Python linting, they're old and probably unused
    exclude: &py_exclude '^src/tool/hpcrun/sample-sources/make-(cuda-)?wrappers.py$'


# ------------------------------------------------------------------------------------
#  Formatting hooks:  Hooks that alter the syntax but not semantics of files
# ------------------------------------------------------------------------------------

- repo: https://github.com/psf/black
  rev: '22.8.0'
  hooks:
  # Blacken all Python code, except allow slightly longer line lengths
  - id: black
    args: ['--line-length=100', '--target-version=py310']
    exclude: *py_exclude

- repo: https://github.com/PyCQA/isort
  rev: 5.10.1
  hooks:
  # Sort imports in all the Python code
  - id: isort
    args: [--profile, black]
    exclude: *py_exclude

- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.3.0
  hooks:
  # Remove trailing whitespace
  - id: trailing-whitespace
    # XXX: Only enabled in CI files for now due to large numbers of failures
    files: &ci_files (^ci/|\.gitlab-ci\.yml$|\.pre-commit-config\.yaml$|\.gitignore$|\.prospector\.yaml$)
  # All files must end in a single newline (or be perfectly empty)
  - id: end-of-file-fixer
    # XXX: Only enabled in CI files for now due to large numbers of failures
    files: *ci_files
  # Remove the UTF8 BOM from the start of any files
  - id: fix-byte-order-marker
  # Use UNIX-style line endings (LF)
  - id: mixed-line-ending
    args: [--fix=lf]
    # XXX: Exclude files in doc/ that use CRLF endings
    exclude: doc/www/.*\.html(\.in)?


# ------------------------------------------------------------------------------------
#  Linting hooks:  Hooks that do not alter files but checks that they satisfy various conditions
# ------------------------------------------------------------------------------------

- repo: meta
  hooks:
  # Check that hooks listed actually do something
  - id: check-hooks-apply
  # Check that any excludes do indeed exclude something
  - id: check-useless-excludes

- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.3.0
  hooks:
  # Ensure all executable scripts have a shebang
  - id: check-executables-have-shebangs
  # Ensure large files (>=500KB) are never added outside of LFS
  - id: check-added-large-files
  # Ensure conflict markers are never committed anywhere
  - id: check-merge-conflict
  # Ensure files do not differ only in case (problematic on some filesystems)
  - id: check-case-conflict
  # Reminder to always work in a branch separate from the main two
  - id: no-commit-to-branch
    args: [--branch, master, --branch, develop]

- repo: https://github.com/Yelp/detect-secrets
  rev: v1.4.0
  hooks:
  # Scan for secrets that should never appear in the repo itself
  - id: detect-secrets
    exclude: |
      (?x)^(
        configure |    # Some of the tight M4 looks like secret keywords
        doc/www/software-instructions.html    # Some of the tags in here are high-entropy
      )$

- repo: https://github.com/PyCQA/prospector
  rev: 1.7.7
  hooks:
  # Use Prospector to lint all our Python code
  - id: prospector
    additional_dependencies: [mypy, ruamel.yaml]
    exclude: *py_exclude

- repo: https://github.com/shellcheck-py/shellcheck-py
  rev: v0.8.0.4
  hooks:
  # Find common errors in shell scripts using shellcheck
  - id: shellcheck
    # XXX: Only enabled in CI files for now
    files: *ci_files

- repo: https://github.com/python-jsonschema/check-jsonschema
  rev: '0.18.3'
  hooks:
  # Validate the GitLab CI scripts against the schema. Doesn't catch everything but helps
  - id: check-gitlab-ci

- repo: https://github.com/codespell-project/codespell
  rev: v2.2.1
  hooks:
  # Identify common spelling mistakes in code and comments
  - id: codespell
    # XXX: Only enabled in CI files for now
    files: *ci_files
