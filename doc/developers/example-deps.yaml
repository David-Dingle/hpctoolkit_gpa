spack:
  # This Spack environment needs to project a default view with all the dependencies, otherwise
  # `spack env activate` will not set the environment variables necessary to use Meson.
  # You can change this `true` to some other path, but keep in mind you will need to similarly
  # adjust any `-Wl,-rpath=` flags in the `(c|cpp)_link_args` configuration to point to the
  # new path.
  view: true

  # The spack environment must be fully unified, to ensure a consistent software stack and to
  # allow Spack to project views without error.
  concretizer:
    unify: true

  definitions:
  # Build tools. These can be freely commented out if you have your own build tools installed.
  - deps:
    - 'meson @1.1.0:'
    - cmake
    - pkgconf

  # Core dependencies.
  #
  # Some dependencies listed in below are marked as "available as wrap." These
  # dependencies can be commented out, a default version will be downloaded and
  # built from source by Meson's wrap subsystem as a fallback.
  #
  # For optional dependencies, this fallback will only trigger if the corresponding
  # feature option is enabled. For example, setting `-Dopencl=enabled` will
  # download a copy of the OpenCL headers, but `-Dopencl=auto` will not.
  #
  # See "Wrapped Dependencies" in the README.md for more details on wraps.
  - when: arch.satisfies('target=x86_64:')
    deps:
    - 'intel-xed +pic @2022.08.11:'
  - deps:
    - >-
      boost @1.70.0:
      +atomic +date_time +filesystem +system +thread +timer +graph +regex
      +shared +multithreaded visibility=global
    - 'bzip2 @1.0.8:'
    - 'dyninst @12.3.0:'
    - 'elfutils ~nls @0.186:'
    - 'intel-tbb +shared @2020.3'
    - 'libmonitor +hpctoolkit ~dlopen @2023.03.15:'
    - 'xz @5.2.5:5.2.6,5.2.10:'
    - 'zlib +shared @1.2.13:1.2'
    - 'libunwind +xz @1.6.2:'
    - 'libpfm4 @4.11.0:'
    - 'xerces-c transcoder=iconv @3.2.3:'
    - 'libiberty +pic @2.37:'
    - 'yaml-cpp +shared @0.7.0:'

    # The following dependencies are optional, but when present enable additional
    # functionality in HPCToolkit. Uncomment to enable the desired feature, but
    # on most systems most of these will configured in Spack as external packages.
    # See https://spack.readthedocs.io/en/latest/packages_yaml.html#external-packages
    # for instructions on how to do this.

    # Dependencies for hpcprof-mpi.
    # Feature option: -Dhpcprof_mpi
    # - mpi

    # Uncomment to enable PAPI metrics (hpcrun -e papi::*)
    # Feature option: -Dpapi
    # - 'papi @6.0.0.1:'

    # Uncomment to enable CUDA metrics (hpcrun -e gpu=nvidia).
    # Feature option: -Dcuda
    # - 'cuda@11.2:'

    # Uncomment to enable Level Zero metrics (hpcrun -e gpu=level0).
    # Feature option: -Dlevel0
    # - 'oneapi-level-zero@1.0.0:'

    # Uncomment to enable Level Zero instrumentation metrics (hpcrun -e gpu=level0,inst).
    # Feature option: -Dgtpin
    # - oneapi-igc
    # - intel-gtpin  # Optional, available as wrap
    #
    # If intel-gtpin is uncommented above
    # If you want to use a custom GTPin, uncomment the following package:
    # And then extend your Meson build configuration with the following parameters:
    # meson setup \
    #   -D{c,cpp}_args="... -I$(spack location -i intel-gtpin)/Include -I$(spack location -i intel-gtpin)/Include/ged/intel64" \
    #   -D{c,cpp}_link_args="... -L$(spack location -i intel-gtpin)/Lib/intel64 -Wl,-rpath=$(spack location -i intel-gtpin)/Lib/intel64" \
    #   ...

    # Uncomment to enable OpenCL metrics (hpcrun -e gpu=opencl).
    # Feature option: -Dopencl
    # - 'opencl-c-headers@2020.12.18:'  # Optional, available as wrap
    #
    # If opencl-c-headers is uncommented above, extend your Meson build configuration with the following:
    # meson setup \
    #   -D{c,cpp}_args="... -I$(spack location -i opencl-c-headers)/include" \
    #   ...

    # Uncomment to enable ROCm metrics (hpcrun -e gpu=amd).
    # Feature option: -Drocm
    # - 'hip@5.3:'
    # - 'hsa-rocr-dev@5.3:'
    # - 'roctracer-dev@5.3:'
    # - 'rocprofiler-dev@5.3:'

  specs:
  - $deps
