{
  "$id": "https://gitlab.com/hpctoolkit/hpctoolkit-deps/lib/toolbox/schema_data/request.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Request specification for a series of potential images",
  "type": "object",
  "properties": {
    "version": {
      "const": 2
    },
    "contents": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "ifAvailable": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/providedFeature"
            }
          },
          "spack": {
            "type": "object",
            "title": "Heavily restricted subset of the spack.yaml format",
            "properties": {
              "definitions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "propertyNames": {
                    "pattern": "^[A-Za-z0-9_]+$"
                  },
                  "properties": {
                    "when": {
                      "enum": [
                        "arch.satisfies('target=x86_64:')",
                        "arch.satisfies('target=aarch64:')",
                        "arch.satisfies('target=ppc64le:')"
                      ]
                    }
                  },
                  "additionalProperties": {
                    "$ref": "#/$defs/spackSpecList"
                  }
                }
              },
              "specs": {
                "$ref": "#/$defs/spackSpecList"
              },
              "packages": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "mpi": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "require": {
                        "type": "array",
                        "maxItems": 1,
                        "items": {
                          "enum": [
                            "openmpi",
                            "mpich"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "concretizer": {
                "unify": {
                  "enum": [
                    true,
                    false,
                    "when_possible"
                  ]
                }
              },
              "view": {
                "const": false
              }
            },
            "additionalProperties": false,
            "required": [
              "specs"
            ]
          },
          "files": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
              "^(/[.a-zA-Z0-9_~?=* -]*[a-zA-Z0-9_~?=* -][.a-zA-Z0-9_~?=* -]*)+$": {
                "type": "object",
                "oneOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "text": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "text"
                    ]
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "base64": {
                        "type": "string",
                        "pattern": "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      }
                    },
                    "required": [
                      "base64"
                    ]
                  }
                ]
              }
            }
          }
        },
        "required": [
          "spack"
        ]
      }
    }
  },
  "required": [
    "version",
    "contents"
  ],
  "$defs": {
    "providedFeature": {
      "enum": [
        "cuda",
        "rocm",
        "level0",
        "gtpin",
        "igc"
      ]
    },
    "spackSpec": {
      "type": "string"
    },
    "spackSpecList": {
      "type": "array",
      "default": [],
      "items": {
        "anyOf": [
          {
            "$ref": "#/$defs/spackSpec"
          },
          {
            "type": "string",
            "pattern": "^\\$[A-Za-z0-9_]+$"
          }
        ]
      }
    }
  }
}
