# OS installation stage: Install build tools from the OS
FROM quay.io/almalinuxorg/almalinux:8 as os-install

# Install the required OS packages
RUN --mount=type=cache,target=/var/lib/dnf,sharing=locked \
  dnf install -y epel-release \
  && dnf config-manager --set-enabled powertools \
  && dnf install -y \
    binutils-devel \
    boost-devel \
    bzip2-devel \
    ccache \
    clang \
    cmake \
    elfutils-devel \
    gcc \
    gcc-c++ \
    git \
    libpfm-devel \
    make  `# FIXME: See https://gitlab.com/hpctoolkit/hpctoolkit/-/issues/704` \
    mvapich2-devel \
    ninja-build \
    opencl-headers \
    papi-devel \
    pkg-config \
    python39 \
    python39-devel \
    python39-pip \
    redhat-rpm-config \
    tbb-devel \
    xerces-c-devel \
    xxhash-devel \
    xz-devel \
    yaml-cpp-devel \
    zlib-devel \
  && : # END

# Install a up-to-date versions of Meson, using a suitable Python
RUN \
  python3.9 -m pip install \
    'meson>=1.1.0,<2' \
  && : # END

# Ensure the appropriate MPI is loaded into the shell environment, always.
ENTRYPOINT ["/bin/sh", "-c", ". /etc/profile.d/modules.sh && module load mpi && exec \"$@\"", "sh"]
CMD ["/bin/bash"]


# From-source installation side-stage: Install (some) software from source
FROM os-install as src-install
RUN \
  git clone --depth=1 https://github.com/HPCToolkit/libmonitor.git /tmp/libmonitor \
  && mkdir /tmp/builddir && cd /tmp/builddir \
  && /tmp/libmonitor/configure --prefix=/usr --disable-dlfcn --enable-client-signals='SIGBUS, SIGSEGV, SIGPROF, 36, 37, 38' \
  && make \
  && DESTDIR=/dest make install \
  && if ! [ -d /dest/usr/lib64 ]; then mv /dest/usr/lib /dest/usr/lib64; fi


# Composition stage: Produce what will become the final image
FROM os-install
COPY --from=src-install /dest /
COPY ci/native/src/image.rhel8.ini /usr/share/meson/native/image.ini
COPY \
  ci/native/src/clang.ini \
  ci/native/src/gcc.ini \
  /usr/share/meson/native/
