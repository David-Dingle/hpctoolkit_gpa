# OS installation stage: Install build tools from the OS
FROM quay.io/almalinuxorg/almalinux:8 as os-install

# Some images set problematic environment variables. Wipe those out first for safety.
ENV \
  PYTHONPATH= \
  PKG_CONFIG_PATH= \
  PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
  CPATH= \
  LIBRARY_PATH= \
  LD_LIBRARY_PATH= \
  CMAKE_PREFIX_PATH=

# Install the required OS packages
RUN --mount=type=cache,target=/var/lib/dnf,sharing=locked \
  dnf install -y epel-release \
  && dnf config-manager --set-enabled powertools \
  && dnf install -y \
    autoconf \
    automake \
    ccache \
    clang \
    cmake \
    eatmydata \
    gcc \
    gcc-c++ \
    git git-lfs \
    libtool \
    make \
    ninja-build \
    mvapich2-devel redhat-rpm-config \
    pkg-config \
    python39 python39-pip python39-devel \
  && : # END

# Install a up-to-date versions of Meson, using a suitable Python
RUN \
  python3.9 -m pip install \
    'meson>=1.1.0,<2' \
  && : # END

# RHEL prefers to use modules for MPI, but that makes headaches in containers.
# Symlink all our problems away.
RUN \
  . /etc/profile.d/modules.sh \
  && module load mpi \
  && cp -svrTn $MPI_BIN /usr/bin \
  && cp -svrTn $MPI_LIB /usr/lib64


# OS native-file side-stage: Collect and compose a native file for the OS software
FROM os-install as os-native

# Copy in the native files this OS image can support
COPY ci/native/src/image.rhel8.ini /usr/share/meson/native/image.ini
COPY \
  ci/native/src/clang.ini \
  ci/native/src/gcc.ini \
  /usr/share/meson/native/


# Spack installation side-stage: Install (some) software from Spack to /opt/software
FROM ghcr.io/spack/almalinux8:0.21.1 as spack-install

# Install all the packages we want, using the environment. This also generates a Meson native file
# referring to all the packages.
COPY ci/spack-deps/ /opt/environment/
ARG VERMODE=latest
RUN --mount=type=secret,id=spack_mirrors,target=/root/.spack/mirrors.yaml \
    --mount=type=cache,target=/mnt/cache/spack-src,sharing=locked \
  export PATH=/opt/spack/bin:"$PATH" \
  && /opt/environment/install.sh


# Final native-file side-stage: Merge the OS and Spack native files
FROM os-native as final-native
COPY --from=spack-install /opt/environment/spack_env.ini /tmp/
COPY ci/native/patch-native.py /tmp/
RUN /tmp/patch-native.py /usr/share/meson/native/image.ini /tmp/spack_env.ini


# Composition stage: Produce what will become the final image
FROM os-install
COPY --from=spack-install /opt/software/ /opt/software/
COPY --from=final-native /usr/share/meson/native/ /usr/share/meson/native/
