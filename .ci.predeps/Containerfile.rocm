# OS installation stage: Install build tools from the OS
ARG ROCM_VERSION=5.7.1
FROM docker.io/rocm/dev-ubuntu-20.04:${ROCM_VERSION} as os-install

# Install the required OS packages
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
  rm -f /etc/apt/apt.conf.d/docker-clean \
  && apt-get update -yqq \
  && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    ccache \
    clang \
    clang-10 \
    clang-11 \
    clang-9 \
    cmake \
    g++ \
    g++-10 \
    g++-8 \
    g++-9 \
    gcc \
    gcc-10 \
    gcc-8 \
    gcc-9 \
    git \
    libboost-atomic-dev \
    libboost-chrono-dev \
    libboost-date-time-dev \
    libboost-filesystem-dev \
    libboost-graph-dev \
    libboost-system-dev \
    libboost-thread-dev \
    libboost-timer-dev \
    libbz2-dev \
    libiberty-dev \
    liblzma-dev \
    libomp-dev \
    libopenmpi-dev \
    libpapi-dev \
    libpfm4-dev \
    libtbb-dev \
    libxerces-c-dev \
    libyaml-cpp-dev \
    libzstd-dev \
    make  `# FIXME: See https://gitlab.com/hpctoolkit/hpctoolkit/-/issues/704` \
    mawk  `# FIXME: See https://gitlab.com/hpctoolkit/hpctoolkit/-/issues/704` \
    ninja-build \
    pkg-config \
    python3 \
    python3-dev \
    python3-pip \
    python3-venv \
    sed  `# FIXME: See https://gitlab.com/hpctoolkit/hpctoolkit/-/issues/704` \
    zlib1g-dev \
  && : # END

# Install a up-to-date versions of Meson, using a suitable Python
# Also install docutils for processing documentation.
RUN \
  python3 -m pip install \
    'meson>=1.3.2,<2' \
    'docutils' \
  && : # END


# From-source installation side-stage: Install (some) software from source
FROM os-install as src-install
RUN \
  git clone --depth=1 https://github.com/HPCToolkit/libmonitor.git /tmp/libmonitor \
  && mkdir /tmp/builddir && cd /tmp/builddir \
  && /tmp/libmonitor/configure --prefix=/usr --disable-dlfcn --enable-client-signals='SIGBUS, SIGSEGV, SIGPROF, 36, 37, 38' \
  && make \
  && DESTDIR=/dest make install


# Composition stage: Produce what will become the final image
FROM os-install
COPY --from=src-install /dest /
COPY \
  ci/native/src/clang.ini \
  ci/native/src/clang10.ini \
  ci/native/src/clang11.ini \
  ci/native/src/clang9.ini \
  ci/native/src/gcc.ini \
  ci/native/src/gcc10.ini \
  ci/native/src/gcc8.ini \
  ci/native/src/gcc9.ini \
  /usr/share/meson/native/

COPY <<EOF /usr/share/meson/native/hpctoolkit-ci.ini
[built-in options]
wrap_mode = 'nofallback'
force_fallback_for = ['dyninst', 'elfutils', 'libunwind', 'xed', 'xxhash']

[project options]
auto_features = 'enabled'
cuda = 'disabled'
level0 = 'disabled'
gtpin = 'disabled'

[zstd:project options]
lz4 = 'disabled'
EOF

# Set CMAKE_PREFIX_PATH to the paths for all the bits
ENV CMAKE_PREFIX_PATH=/opt/rocm${CMAKE_PREFIX_PATH:+:$CMAKE_PREFIX_PATH}
